<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
<!-- http://www.summa-tech.com/blog/2009/04/20/6-tips-for-managing-property-files-with-spring
6 Tips for Managing Property Files with Spring 
Use PropertyResourceConfigurer's convertProperty for decrypted password 
 -->
 
 <!--  context:property-placeholder location="classpath:${my.env}.properties"/>  -->
 <context:property-placeholder system-properties-mode="ENVIRONMENT"/>
 <!--  
 <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 	<property name="locations">
 		<list>
 			<value>classpath:myproperties.properties</value>
 		</list>
 	</property>
 </bean>
 -->
	<bean id="a" class="com.rajesh.proptest.A" name="aName">
		<property name="var1" value="${variable1}"></property>
		<property name="var2" value="${variable2}"></property>
	</bean>
</beans>
